# Based on : https://github.com/boostorg/hana/blob/master/.travis.yml
# Project language
language: c++
# sudo 
sudo: required
# Global variable
env:
  global:
    - DEPS_ROOT=~/deps
    - OPENBLAS_ROOT=$DEPS_ROOT/openblas
    - OPENCV_ROOT=$DEPS_ROOT/opencv
    - DOXYGEN_ROOT=$DEPS_ROOT/doyxgen
    - CMAKE_OPTIONS=-DWITH_EXAMPLES=ON
# Define list of OS and compiler to test on
matrix:
  include:
    # Linux - GCC
    - os: linux
      dist: trusty
      env: NSTRIP=1 CMAKE_URL=https://cmake.org/files/v3.4/cmake-3.4.3-Linux-x86_64.tar.gz
      compiler: gcc
    
    # Linux - Clang
    - os: linux
      dist: trusty
      env: NSTRIP=1 CMAKE_URL=https://cmake.org/files/v3.4/cmake-3.4.3-Linux-x86_64.tar.gz 
      compiler: clang
    
    # OSX - Clang
    - os: osx
      osx_image: xcode8.3
      env: NSTRIP=3 CMAKE_URL=https://cmake.org/files/v3.4/cmake-3.4.3-Darwin-x86_64.tar.gz
      compiler: clang
      
    # Doc Generator
    - os: linux
      dist: trusty
      env: DOCUMENTATION=TRUE NSTRIP=1 DOXYGEN_URL=http://ftp.stack.nl/pub/users/dimitri/doxygen-1.8.13.linux.bin.tar.gz CMAKE_OPTIONS="${CMAKE_OPTIONS} -DWITH_DOCS=ON"
      compiler: gcc
# Add packages
addons:
  apt:
    packages:
      # Add libc++ https://github.com/mapbox/mapbox-gl-native/issues/287
      - libc++1
      - libc++-dev
      - gfortran
      # Doxygen
      - graphviz
      - flex
      - bison
      - libiconv-hook*
# Cache dependencies
cache:
  directories:
    - $OPENBLAS_ROOT
    - $OPENCV_ROOT
    - $DOXYGEN_ROOT
# Limit cloning depth
git:
  depth: 3
# Install dependencies needed by library
install:
  ############################################################################
  # All the dependencies are installed in ${TRAVIS_BUILD_DIR}/deps/
  ############################################################################
  - mkdir -p $DEPS_ROOT && cd $DEPS_ROOT
  
  ############################################################################
  # Install a recent CMake
  ############################################################################
  - |
    mkdir cmake && curl -o cmake.tar.gz -O ${CMAKE_URL} && tar -C cmake/ --strip-components=${NSTRIP} -xzf cmake.tar.gz
    export PATH=$DEPS_ROOT/cmake/bin:${PATH}
  - cmake --version
  
  ############################################################################
  # Install OpenBLAS (only on linux)
  ############################################################################
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      $TRAVIS_BUILD_DIR/travis/install-openblas.sh $OPENBLAS_ROOT
    fi
    
  ############################################################################
  # Install OpenCV
  ############################################################################
  - $TRAVIS_BUILD_DIR/travis/install-opencv.sh $OPENCV_ROOT
  
  ############################################################################
  # Install a recent Doxygen
  ############################################################################
  - |
    if [[ "$DOCUMENTATION" == "TRUE" ]]; then
      $TRAVIS_BUILD_DIR/travis/install-doxygen.sh $DOXYGEN_ROOT
      doxygen --version
    fi
  
before_script:
  ############################################################################
  # Set the git identity (for pushing the documentation and the benchmarks)
  ############################################################################
  - git config --global user.name "Travis bot"
  - git config --global user.email "<>"
  
# Compilation scripts start here
script:
  - $TRAVIS_BUILD_DIR/travis/build-library.sh
  # Run UnitTest
  - $TRAVIS_BUILD_DIR/travis/test-library.sh
  # Build docs
  - $TRAVIS_BUILD_DIR/travis/build-doc.sh

# Setup SSH for deployment
before_deploy:
  - |
    cd $TRAVIS_BUILD_DIR
    openssl aes-256-cbc -K $encrypted_dcb86d38f385_key -iv $encrypted_dcb86d38f385_iv -in deploy-key.enc -out deploy-key -d
    chmod 600 deploy-key
    eval `ssh-agent -s`
    ssh-add deploy-key
# Push freshly build documentation online
deploy:
  provider: script
  skip_cleanup: true
  script: $TRAVIS_BUILD_DIR/travis/deploy-doc.sh
  on:
    branch: develop
  